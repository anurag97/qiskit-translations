msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-03 17:34+0000\n"
"PO-Revision-Date: 2021-05-04 20:08\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/1_aer_provider.po\n"
"X-Crowdin-File-ID: 9160\n"
"Language: pt_BR\n"

#: ../../tutorials/simulators/1_aer_provider.ipynb:10
msgid "This page was generated from `tutorials/simulators/1_aer_provider.ipynb`__."
msgstr "Esta página foi gerada, a partir do `tutorials/simulators/1_aer_provider.ipynb`__."

#: ../../tutorials/simulators/1_aer_provider.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/simulators/1_aer_provider.ipynb>`_."
msgstr "Execute interativamente no `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/simulators/1_aer_provider.ipynb>`_."

#: ../../tutorials/simulators/1_aer_provider.ipynb:9
msgid "Simulators"
msgstr "Simuladores"

#: ../../tutorials/simulators/1_aer_provider.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/simulators/1_aer_provider.ipynb:23
msgid "This notebook shows how to import the *Qiskit Aer* simulator backend and use it to run ideal (noise free) Qiskit Terra circuits."
msgstr "Este notebook mostra como importar o serviço do simulador *Qiskit Aer* e usá-lo para executar circuitos Qiskit Terra ideais (livre de ruído)."

#: ../../tutorials/simulators/1_aer_provider.ipynb:51
msgid "The Aer Provider"
msgstr "O Provedor Aer"

#: ../../tutorials/simulators/1_aer_provider.ipynb:53
msgid "The ``Aer`` provider contains a variety of high performance simulator backends for a variety of simulation methods. The available backends on the current system can be viewed using ``Aer.backends``"
msgstr "O provedor ``Aer`` contém uma variedade de backends de simuladores de alta performance para vários métodos de simulação. Os serviços disponíveis no sistema atual podem ser visualizados usando ``Aer.backends``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:117
msgid "The Aer Simulator"
msgstr "O Simulador Aer"

#: ../../tutorials/simulators/1_aer_provider.ipynb:119
msgid "The main simulator backend of the Aer provider is the ``AerSimulator`` backend. A new simulator backend can be created using ``Aer.get_backend('aer_simulator')``."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:140
msgid "The default behavior of the ``AerSimulator`` backend is to mimic the execution of an actual device. If a ``QuantumCircuit`` containing measurements is run it will return a count dictionary containing the final values of any classical registers in the circuit. The circuit may contain gates, measurements, resets, conditionals, and other custom simulator instructions that will be discussed in another notebook."
msgstr "O comportamento padrão do serviço ``AerSimulator`` é simular a execução de um dispositivo real. Se um ``QuantumCircuit`` contendo medições for executado ele retornará um dicionário de contagem contendo os valores finais de quaisquer registradores clássicos no circuito. O circuito pode conter portas, medições, resets, condicionais e outras instruções personalizadas do simulador que serão discutidas em outro notebook."

#: ../../tutorials/simulators/1_aer_provider.ipynb:152
msgid "Simulating a quantum circuit"
msgstr "Simulando um circuito quântico"

#: ../../tutorials/simulators/1_aer_provider.ipynb:154
msgid "The basic operation runs a quantum circuit and returns a counts dictionary of measurement outcomes. Here we run a simple circuit that prepares a 2-qubit Bell-state :math:`\\left|\\psi\\right\\rangle = \\frac{1}{2}\\left(\\left|0,0\\right\\rangle + \\left|1,1 \\right\\rangle\\right)` and measures both qubits."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:198
msgid "Returning measurement outcomes for each shot"
msgstr "Retornando resultados de medição para cada repetição (shot)"

#: ../../tutorials/simulators/1_aer_provider.ipynb:200
msgid "The ``QasmSimulator`` also supports returning a list of measurement outcomes for each individual shot. This is enabled by setting the keyword argument ``memory=True`` in the ``run``."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:244
msgid "Aer Simulator Options"
msgstr "Opções do Simulador Aer"

#: ../../tutorials/simulators/1_aer_provider.ipynb:246
msgid "The ``AerSimulator`` backend supports a variety of configurable options which can be updated using the ``set_options`` method. See the ``AerSimulator`` API documentation for additional details."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:258
msgid "Simulation Method"
msgstr "Método de Simulação"

#: ../../tutorials/simulators/1_aer_provider.ipynb:260
msgid "The ``AerSimulator`` supports a variety of simulation methods, each of which supports a different set of instructions. The method can be set manually using ``simulator.set_option(method=value)`` option, or a simulator backend with a preconfigured method can be obtained directly from the ``Aer`` provider using ``Aer.get_backend``."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:262
msgid "When simulating ideal circuits, changing the method between the exact simulation methods ``stabilizer``, ``statevector``, ``density_matrix`` and ``matrix_product_state`` should not change the simulation result (other than usual variations from sampling probabilities for measurement outcomes)"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:319
msgid "Automatic Simulation Method"
msgstr "Método de Simulação Automática"

#: ../../tutorials/simulators/1_aer_provider.ipynb:321
msgid "The default simulation method is ``automatic`` which will automatically select a one of the other simulation methods for each circuit based on the instructions in those circuits. A fixed simualtion method can be specified by by adding the method name when getting the backend, or by setting the ``method`` option on the backend."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:333
msgid "GPU Simulation"
msgstr "Simulação de GPU"

#: ../../tutorials/simulators/1_aer_provider.ipynb:335
msgid "The ``statevector``, ``density_matrix`` and ``unitary`` simulators support running on a NVidia GPUs. For these methods the simulation device can also be manually set to CPU or GPU using ``simulator.set_options(device='GPU')`` backend option. If a GPU device is not available setting this option will raise an exception."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:384
msgid "The ``Aer`` provider will also contain preconfigured GPU simulator backends if Qiskit Aer was installed with GPU support on a complatible system:"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:386
msgid "``aer_simulator_statevector_gpu``"
msgstr "``aer_simulator_statevector_gpu``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:387
msgid "``aer_simulator_density_matrix_gpu``"
msgstr "``aer_simulator_density_matrix_gpu``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:388
msgid "``aer_simulator_unitary_gpu``"
msgstr "``aer_simulator_unitary_gpu``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:390
msgid "*Note: The GPU version of Aer can be installed using ``pip install qiskit-aer-gpu``.*"
msgstr "*Nota: A versão para GPU do Aer pode ser instalada usando ``pip install qiskit-aer-gpu``.*"

#: ../../tutorials/simulators/1_aer_provider.ipynb:402
msgid "Simulation Precision"
msgstr "Precisão da Simulação"

#: ../../tutorials/simulators/1_aer_provider.ipynb:404
msgid "One of the available simulator options allows setting the float precision for the ``statevector``, ``density_matrix`` ``unitary`` and ``superop`` methods. This is done using the ``set_precision=\"single\"`` or ``precision=\"double\"`` (default) option:"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:451
msgid "Setting the simulation precesion applies to both CPU and GPU simulation devices. Single precision will halve the requried memeory and may provide performance improvements on certain systems."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:463
msgid "Custom Simulator Instructions"
msgstr "Instruções de Simulador Personalizadas"

#: ../../tutorials/simulators/1_aer_provider.ipynb:475
msgid "Saving the simulator state"
msgstr "Salvando o estado do simulador"

#: ../../tutorials/simulators/1_aer_provider.ipynb:477
msgid "The state of the simulator can be saved in a variety of formats using custom simulator instructions."
msgstr "O estado do simulador pode ser salvo em uma variedade de formatos usando instruções do simulador personalizadas."

#: ../../tutorials/simulators/1_aer_provider.ipynb:480
#: ../../tutorials/simulators/1_aer_provider.ipynb:693
msgid "Circuit method"
msgstr "Método de Circuito"

#: ../../tutorials/simulators/1_aer_provider.ipynb:480
#: ../../tutorials/simulators/1_aer_provider.ipynb:693
msgid "Description"
msgstr "Descrição"

#: ../../tutorials/simulators/1_aer_provider.ipynb:480
#: ../../tutorials/simulators/1_aer_provider.ipynb:693
msgid "Supported Methods"
msgstr "Métodos Suportados"

#: ../../tutorials/simulators/1_aer_provider.ipynb:482
msgid "``save_state``"
msgstr "``save_state``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:482
msgid "Save the simulator state in the native format for the simulation method"
msgstr "Salve o estado do simulador no formato nativo para o método de simulação"

#: ../../tutorials/simulators/1_aer_provider.ipynb:482
msgid "All"
msgstr "Todos"

#: ../../tutorials/simulators/1_aer_provider.ipynb:484
msgid "``save_statevector``"
msgstr "``save_statevector``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:484
msgid "Save the simulator state as a statevector"
msgstr "Salve o estado do simulador como um vetor de estados"

#: ../../tutorials/simulators/1_aer_provider.ipynb:484
msgid "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"extended_stabilizer\"``"
msgstr "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"extended_stabilizer\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:486
msgid "``save_stabilizer``"
msgstr "``save_stabilizer``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:486
msgid "Save the simulator state as a Clifford stabilizer"
msgstr "Salve o estado do simulador como um estabilizador Clifford"

#: ../../tutorials/simulators/1_aer_provider.ipynb:486
#: ../../tutorials/simulators/1_aer_provider.ipynb:697
msgid "``\"automatic\"``, ``\"stabilizer\"``"
msgstr "``\"automatic\"``, ``\"stabilizer\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:488
msgid "``save_density_matrix``"
msgstr "``save_density_matrix``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:488
msgid "Save the simulator state as a density matrix"
msgstr "Salve o estado do simulador como uma matriz de densidade"

#: ../../tutorials/simulators/1_aer_provider.ipynb:488
msgid "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"density_matrix\"``"
msgstr "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"density_matrix\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:490
msgid "``save_matrix_product_state``"
msgstr "``save_matrix_product_state``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:490
msgid "Save the simulator state as a a matrix product state tensor"
msgstr "Salve o estado do simulador como uma matriz de estado do produto tensor"

#: ../../tutorials/simulators/1_aer_provider.ipynb:490
msgid "``\"automatic\"``, ``\"matrix_product_state\"``"
msgstr "``\"automatic\"``, ``\"matrix_product_state\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:492
msgid "``save_unitary``"
msgstr "``save_unitary``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:492
msgid "Save the simulator state as unitary matrix of the run circuit"
msgstr "Salvar o estado do simulador como matriz unitária do circuito executado"

#: ../../tutorials/simulators/1_aer_provider.ipynb:492
msgid "``\"automatic\"``, ``\"unitary\"``"
msgstr "``\"automatic\"``, ``\"unitary\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:494
msgid "``save_superop``"
msgstr "``save_superop``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:494
msgid "Save the simulator state as superoperator matrix of the run circuit"
msgstr "Salvar o estado do simulador como matriz superoperadora do circuito executado"

#: ../../tutorials/simulators/1_aer_provider.ipynb:494
#: ../../tutorials/simulators/1_aer_provider.ipynb:703
msgid "``\"automatic\"``, ``\"superop\"``"
msgstr "``\"automatic\"``, ``\"superop\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:497
msgid "Note that these instructions are only supported by the Aer simulator and will result in an error if a circuit containing them is run on a non-simulator backend such as an IBM Quantum device."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:509
msgid "Saving the final statevector"
msgstr "Salvando o statevector final"

#: ../../tutorials/simulators/1_aer_provider.ipynb:511
msgid "To save the final statevector of the simulation we can append the circuit with the ``save_statevector`` instruction. Note that this instruction should be applied *before* any measurements if we do not want to save the collapsed post-measurement state"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:555
msgid "Saving the circuit unitary"
msgstr "Salvando a unidade do circuito"

#: ../../tutorials/simulators/1_aer_provider.ipynb:557
msgid "To save the unitary matrix for a ``QuantumCircuit`` we can append the circuit with the ``save_unitary`` instruction. Note that this circuit cannot contain any measurements or resets since these instructions are not suppored on for the ``\"unitary\"`` simulation method"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:619
msgid "Saving multiple states"
msgstr "Salvando multiplos estados"

#: ../../tutorials/simulators/1_aer_provider.ipynb:621
msgid "We can also apply save instructions at multiple locations in a circuit. Note that when doing this we must provide a unique label for each instruction to retrieve them from the results"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:688
msgid "Setting the simulator to a custom state"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:690
msgid "The ``AerSimulator`` allows setting a custom simulator state for several of its simulation methods using custom simulator instructions"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:695
msgid "``set_statevector``"
msgstr "``set_statevector``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:695
msgid "Set the simulator state to the specified statevector"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:695
msgid "``\"automatic\"``, ``\"statevector\"``, ``\"density_matrix\"``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:697
msgid "``set_stabilizer``"
msgstr "``set_stabilizer``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:697
msgid "Set the simulator state to the specified Clifford stabilizer"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:699
msgid "``set_density_matrix``"
msgstr "``set_density_matrix``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:699
msgid "Set the simulator state to the specified density matrix"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:699
msgid "``\"automatic\"``, ``\"density_matrix\"``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:701
msgid "``set_unitary``"
msgstr "``set_unitary``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:701
msgid "Set the simulator state to the specified unitary matrix"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:701
msgid "``\"automatic\"``, ``\"unitary\"``, ``\"superop\"``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:703
msgid "``set_superop``"
msgstr "``set_superop``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:703
msgid "Set the simulator state to the specified superoperator matrix"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:706
msgid "**Notes:** \\* These instructions must be applied to all qubits in a circuit, otherwise an exception will be raised. \\* The input state must also be a valid state (statevector, denisty matrix, unitary etc) otherwise an exception will be raised. \\* These instructions can be applied at any location in a circuit and will override the current state with the specified one. Any classical register values (eg from preceeding measurements) will be unaffected \\* Set state instructions are only supported by the Aer simulator and will result in an error if a circuit containing them is run on a non-simulator backend such as an IBM Quantum device."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:719
msgid "Setting a custom statevector"
msgstr "Configurando um vetor de estados personalizado"

#: ../../tutorials/simulators/1_aer_provider.ipynb:721
msgid "The ``set_statevector`` instruction can be used to set a custom ``Statevector`` state. The input statevector must be valid (:math:`|\\langle\\psi|\\psi\\rangle|=1`)"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:780
msgid "Using the initialize instruction"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:782
msgid "It is also possible to initialize the simulator to a custom statevector using the ``initialize`` instruction. Unlike the ``set_statevector`` instruction this instruction is also supported on real device backends by unrolling to reset and standard gate instructions."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:837
msgid "Setting a custom density matrix"
msgstr "Definindo uma matriz de densidade personalizada"

#: ../../tutorials/simulators/1_aer_provider.ipynb:839
msgid "The ``set_density_matrix`` instruction can be used to set a custom ``DensityMatrix`` state. The input density matrix must be valid (:math:`Tr[\\rho]=1, \\rho \\ge 0`)"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:907
msgid "Setting a custom stabilizer state"
msgstr "Configurando um estado estabilizador personalizado"

#: ../../tutorials/simulators/1_aer_provider.ipynb:909
msgid "The ``set_stabilizer`` instruction can be used to set a custom ``Clifford`` stabilizer state. The input stabilizer must be a valid ``Clifford``."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:966
msgid "Setting a custom unitary"
msgstr "Definindo uma unidade personalizada"

#: ../../tutorials/simulators/1_aer_provider.ipynb:968
msgid "The ``set_unitary`` instruction can be used to set a custom unitary ``Operator`` state. The input unitary matrix must be valid (:math:`U^\\dagger U=\\mathbb{1}`)"
msgstr ""

